# Default values for pulse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

global:
  tls: true

image:
  repository: 4chainstudio/bux-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerPort: 3003

service:
  type: ClusterIP
  port: 80

ingressControllers: 
  - alb

domainName: test.com
certificate_arn: arn:aws:acm:eu-central-1:1234567890123:certificate/0d5e96d9-4670-4779-bc39-e9d9a77ff0de

config:
  authentication:
    admin_key: xpub661MyMwAqRbcFgfmdkPgE2m5UjHXu9dj124DbaGLSjaqVESTWfCD4VuNmEbVPkbYLCkykwVZvmA8Pbf8884TQr1FgdG2nPoHR8aB36YdDQh

subdomain: 

ingress:
  - name: ingress-traefik
    enabled: true
    className: "traefik"
    annotations: 
      cert-manager.io/cluster-issuer: lets-encrypt
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    host:
      paths:
        - path: /
          pathType: Prefix
      tls:
        secretName: bux-server-tls
  - name: ingress-nginx
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: lets-encrypt
      nginx.ingress.kubernetes.io/service-upstream: "true"
    host:
      paths:
        - path: /
          pathType: Prefix
      tls:
        secretName: bux-server-tls
  - name: ingress-alb
    enabled: true
    className: "alb"
    annotations:
       kubernetes.io/ingress.class: "alb"
       alb.ingress.kubernetes.io/scheme: internet-facing
       alb.ingress.kubernetes.io/group.name: alb-https
       alb.ingress.kubernetes.io/ip-address-type: ipv4
       alb.ingress.kubernetes.io/target-type: ip
       alb.ingress.kubernetes.io/ssl-redirect: '443'
    host:
      paths:
        - path: /
          pathType: Prefix
    #    hosts:
    #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
  - name: config-volume
    configMap:
      name: bux-server-env-configs

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: config-volume
    mountPath: /config/envs

nodeSelector: {}

tolerations: []

affinity: {}


postgresql-server:
  enabled: true
  global:
    postgresql:
      auth:
        username: bux
        password: bux
        database: bux
  primary:
    persistentVolumeClaimRetentionPolicy:
      enabled: true
      whenDeleted: Delete

redis:
  enabled: true 
  architecture: standalone
  auth:
    enabled: false
  master:
    persistentVolumeClaimRetentionPolicy:
      enabled: true
      whenDeleted: Delete
    persistance:
      size: 1Gi

env:
  - name: BUX_SQL__USER
    value: bux
  - name: BUX_SQL__PASSWORD
    value: bux
  - name: BUX_SQL__NAME
    value: bux
  - name: BUX_ENVIRONMENT
    value: development
  
      
